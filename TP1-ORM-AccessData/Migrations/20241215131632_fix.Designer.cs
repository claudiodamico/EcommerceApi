// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP1_ORM_AccessData.Data;

#nullable disable

namespace TP1_ORM_AccessData.Migrations
{
    [DbContext(typeof(TiendaDbContext))]
    [Migration("20241215131632_fix")]
    partial class fix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Carrito", b =>
                {
                    b.Property<Guid>("CarritoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("CarritoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Carrito", (string)null);
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.CarritoProducto", b =>
                {
                    b.Property<Guid?>("CarritoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("CarritoId", "ProductoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CarritoProducto", (string)null);
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("DNI");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Orden", b =>
                {
                    b.Property<Guid>("OrdenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarritoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("OrdenId");

                    b.HasIndex("CarritoId")
                        .IsUnique();

                    b.ToTable("Orden", (string)null);
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("ProductoId");

                    b.ToTable("Producto", (string)null);

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            Codigo = "20923",
                            Descripcion = "La remera Rotor Camo Ss te ofrece un estilo informal perfecto para un día activo.",
                            Imagen = "https://acdn.mitiendanube.com/stores/987/679/products/11157020-f-23-08b22ac57398b8db7317255612299220-1024-1024.jpg",
                            Marca = "Billabong",
                            Nombre = "Remera Rotor Camo Ss",
                            Precio = 38999m
                        },
                        new
                        {
                            ProductoId = 2,
                            Codigo = "20924",
                            Descripcion = "Big Wave es una remera básica con estampa de marca de lado del frente. Novedad de esta temporada Winter22. Realizada con algodón sustentable",
                            Imagen = "https://d3ugyf2ht6aenh.cloudfront.net/stores/987/679/products/11137062-j-61-5fdbd4b4f6d758f7cf16675871404328-640-0.jpg",
                            Marca = "Billabong",
                            Nombre = "Remera New Wave HS",
                            Precio = 33999m
                        },
                        new
                        {
                            ProductoId = 3,
                            Codigo = "92364",
                            Descripcion = "La Journey Ligth es una bermuda diseñada para ofrecerte el máximo confort y un look relajado. ",
                            Imagen = "https://acdn.mitiendanube.com/stores/987/679/products/11157009-a-12-cd6a6ca40691a91b4117255446442464-1024-1024.jpg",
                            Marca = "Billabong",
                            Nombre = "Bermuda Journey Light",
                            Precio = 49999m
                        },
                        new
                        {
                            ProductoId = 4,
                            Codigo = "3084",
                            Descripcion = "Reloj Rip Curl Detroit.CUADRANTE: 3 agujas. CARCASA: Acero inoxidable de calidad marina. Lente de cristal mineral Enchapado Iónico. Sumergible hasta 100m. Ancho:48mm. MALLA:Cuero",
                            Imagen = "https://www.cristobalcolon.com/fullaccess/item7252foto80160.jpg",
                            Marca = "Rip Curl",
                            Nombre = "Reloj Rip Curl Detroit",
                            Precio = 109999m
                        },
                        new
                        {
                            ProductoId = 5,
                            Codigo = "3097",
                            Descripcion = "Billetera Rip Curl 2 en 1.  100% cuero. Protección RFID. Nota gemela. Moneda con cremallera. Varias ranuras para tarjetas. Cartera delgada extraíble. Ventana de identificación.",
                            Imagen = "https://www.cristobalcolon.com/fullaccess/item12729foto102760.jpg",
                            Marca = "Rip Curl",
                            Nombre = "Billetera Rip Curl 2 en 1",
                            Precio = 48999m
                        },
                        new
                        {
                            ProductoId = 6,
                            Codigo = "3065",
                            Descripcion = "Descubre nuestra bermuda Straight Black denim de 5 bolsillos, diseñadas para ofrecerte la combinación perfecta de estilo y funcionalidad",
                            Imagen = "https://acdn.mitiendanube.com/stores/987/679/products/11147714-j-1-ae84da740eb2e4784d17274489145431-1024-1024.jpg",
                            Marca = "Billabong",
                            Nombre = "Bermuda Straight Black",
                            Precio = 64999m
                        },
                        new
                        {
                            ProductoId = 7,
                            Codigo = "101119",
                            Descripcion = "La All Day Shoulder Bag es un morral con reguladores y etiqueta de marca en el delantero, posee tres bolsillos.",
                            Imagen = "https://acdn.mitiendanube.com/stores/987/679/products/12148009-2024-08-27t115320-477-973b18be0c5d293c5217247704544550-1024-1024.png",
                            Marca = "Billabong",
                            Nombre = "Bolso All Day Shoulder Bag",
                            Precio = 59999m
                        },
                        new
                        {
                            ProductoId = 8,
                            Codigo = "108115",
                            Descripcion = "La Sumergible Suftrek Journey es una de esas prendas que no pueden faltar en tu ropero.",
                            Imagen = "https://acdn.mitiendanube.com/stores/987/679/products/abyws00166-a-4-7c6a09eccb3223337b16971430118872-1024-1024.jpg",
                            Marca = "Billabong",
                            Nombre = "Bermuda Surftrek",
                            Precio = 99999m
                        },
                        new
                        {
                            ProductoId = 9,
                            Codigo = "112007",
                            Descripcion = "La Dagger es una musculosa con calce relaxed, con cuello redondo y con una estampa en el pecho para combinarla con cualquier outfit.",
                            Imagen = "https://acdn.mitiendanube.com/stores/987/679/products/11157504-b-1-088c4f9427fd158c1817238185572589-1024-1024.jpg",
                            Marca = "Billabong",
                            Nombre = "Musculosa Dagger",
                            Precio = 31999m
                        },
                        new
                        {
                            ProductoId = 10,
                            Codigo = "92753",
                            Descripcion = "Fresca para usarla en cualquier situacion, la camisa manga corta Sundays Mini Wave es la indicada.",
                            Imagen = "https://acdn.mitiendanube.com/stores/987/679/products/19147202-p-23-5d10eae836d8f5e96417309842388819-1024-1024.jpg",
                            Marca = "Billabong",
                            Nombre = "Camisa Sundays",
                            Precio = 59999m
                        });
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Carrito", b =>
                {
                    b.HasOne("TP1_ORM_Domain.Entities.Cliente", "Cliente")
                        .WithMany("Carritos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.CarritoProducto", b =>
                {
                    b.HasOne("TP1_ORM_Domain.Entities.Carrito", "Carrito")
                        .WithMany("CarritoProductos")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP1_ORM_Domain.Entities.Producto", "Producto")
                        .WithMany("CarritoProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Orden", b =>
                {
                    b.HasOne("TP1_ORM_Domain.Entities.Carrito", "Carrito")
                        .WithOne("Orden")
                        .HasForeignKey("TP1_ORM_Domain.Entities.Orden", "CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Carrito", b =>
                {
                    b.Navigation("CarritoProductos");

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Carritos");
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Producto", b =>
                {
                    b.Navigation("CarritoProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
