// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP1_ORM_AccessData.Data;

#nullable disable

namespace TP1_ORM_AccessData.Migrations
{
    [DbContext(typeof(TiendaDbContext))]
    partial class TiendaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Carrito", b =>
                {
                    b.Property<Guid>("CarritoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("CarritoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Carrito", (string)null);
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.CarritoProducto", b =>
                {
                    b.Property<Guid?>("CarritoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("CarritoId", "ProductoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CarritoProducto", (string)null);
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("DNI");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Orden", b =>
                {
                    b.Property<Guid>("OrdenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarritoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("OrdenId");

                    b.HasIndex("CarritoId")
                        .IsUnique();

                    b.ToTable("Orden", (string)null);
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("ProductoId");

                    b.ToTable("Producto", (string)null);

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            Codigo = "20923",
                            Descripcion = "Es una chomba de mangas cortas, de caida recta, totalmente ideada para que luzcas nuestra marca con tu mejor potencial.",
                            Imagen = "https://acdn.mitiendanube.com/stores/987/679/products/11147033-j-6c9e20ce32654e059616944705014965-1024-1024.jpg",
                            Marca = "Billabong",
                            Nombre = "Remera Space Wave",
                            Precio = 15999m
                        },
                        new
                        {
                            ProductoId = 2,
                            Codigo = "20924",
                            Descripcion = "Big Wave es una remera básica con estampa de marca de lado del frente. Novedad de esta temporada Winter22. Realizada con algodón sustentable",
                            Imagen = "https://d3ugyf2ht6aenh.cloudfront.net/stores/987/679/products/11137062-j-61-5fdbd4b4f6d758f7cf16675871404328-640-0.jpg",
                            Marca = "Billabong",
                            Nombre = "Remera New Wave HS",
                            Precio = 13999m
                        },
                        new
                        {
                            ProductoId = 3,
                            Codigo = "92364",
                            Descripcion = " Remera Rip Curl. Relaxed Fit. Estampa frente y espalda. Estampa interna de marca y logo. Grifa logo. 100% Algodón. Jersey 16/1.",
                            Imagen = "https://www.cristobalcolon.com/fullaccess/item23284foto100240.jpg",
                            Marca = "Rip Curl",
                            Nombre = "Remera Rip Curl Crecent",
                            Precio = 17999m
                        },
                        new
                        {
                            ProductoId = 4,
                            Codigo = "3084",
                            Descripcion = "Reloj Rip Curl Detroit.CUADRANTE: 3 agujas. CARCASA: Acero inoxidable de calidad marina. Lente de cristal mineral Enchapado Iónico. Sumergible hasta 100m. Ancho:48mm. MALLA:Cuero",
                            Imagen = "https://www.cristobalcolon.com/fullaccess/item7252foto80160.jpg",
                            Marca = "Rip Curl",
                            Nombre = "Reloj Rip Curl Detroit",
                            Precio = 89999m
                        },
                        new
                        {
                            ProductoId = 5,
                            Codigo = "3097",
                            Descripcion = "Billetera Rip Curl 2 en 1.  100% cuero. Protección RFID. Nota gemela. Moneda con cremallera. Varias ranuras para tarjetas. Cartera delgada extraíble. Ventana de identificación.",
                            Imagen = "https://www.cristobalcolon.com/fullaccess/item12729foto102760.jpg",
                            Marca = "Rip Curl",
                            Nombre = "Billetera Rip Curl 2 en 1",
                            Precio = 18999m
                        },
                        new
                        {
                            ProductoId = 6,
                            Codigo = "3065",
                            Descripcion = "Jogging Rip Curl Logo. Rustico invisible Jogging. Standard fit. Cintura y punos con elastico. Heattransfers logo. Cordon de ajuste al tono. Multietiquetas. 100% Algodon.",
                            Imagen = "https://www.cristobalcolon.com/fullaccess/item23364foto100473.jpg",
                            Marca = "Rip Curl",
                            Nombre = "Jogging Rip Curl Logo",
                            Precio = 27999m
                        },
                        new
                        {
                            ProductoId = 7,
                            Codigo = "102034",
                            Descripcion = "Remera manga corta, Tela: Jersey 30.1, Fit: Regular, TELA: 100% Algodón",
                            Imagen = "https://cdn.quiksilver.com.ar/media/catalog/product/cache/58de367b3bfe9e60ffd377a75f209f56/2/2/2232102218-10_1.jpg",
                            Marca = "Quiksilver",
                            Nombre = "Remera Mc Small Chest Logo",
                            Precio = 12249m
                        },
                        new
                        {
                            ProductoId = 8,
                            Codigo = "108115",
                            Descripcion = "HILADO: 100% Algodón, Sweater, Fit: Regular, Cuello redondo, Logo bordado en el frente",
                            Imagen = "https://cdn.quiksilver.com.ar/media/catalog/product/cache/58de367b3bfe9e60ffd377a75f209f56/2/2/2241111001-10_1.jpg",
                            Marca = "Quiksilver",
                            Nombre = "Sweater Perennials",
                            Precio = 34799m
                        },
                        new
                        {
                            ProductoId = 9,
                            Codigo = "112007",
                            Descripcion = "Zapatilla Bota de caña baja realizada en cuero vacuno descarne y textil. Suela de eva inyectada para mayor confort",
                            Imagen = "https://cdn.quiksilver.com.ar/media/catalog/product/cache/58de367b3bfe9e60ffd377a75f209f56/2/2/2222112007-35_1.jpg",
                            Marca = "Quiksilver",
                            Nombre = "Zapatillas Fujia Olv",
                            Precio = 54299m
                        },
                        new
                        {
                            ProductoId = 10,
                            Codigo = "92753",
                            Descripcion = "El Core Crew es un buzo básico de escote redondo con una etiqueta grifa de Billabong en el pecho que traemos y mejoramos todas las temporadas.",
                            Imagen = "https://acdn.mitiendanube.com/stores/987/679/products/mbcrefunj-11-f09dd67aac000be36716762289971567-1024-1024.jpg",
                            Marca = "Billabong",
                            Nombre = "Buzo Core Crew",
                            Precio = 22999m
                        });
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Carrito", b =>
                {
                    b.HasOne("TP1_ORM_Domain.Entities.Cliente", "Cliente")
                        .WithMany("Carritos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.CarritoProducto", b =>
                {
                    b.HasOne("TP1_ORM_Domain.Entities.Carrito", "Carrito")
                        .WithMany("CarritoProductos")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP1_ORM_Domain.Entities.Producto", "Producto")
                        .WithMany("CarritoProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Orden", b =>
                {
                    b.HasOne("TP1_ORM_Domain.Entities.Carrito", "Carrito")
                        .WithOne("Orden")
                        .HasForeignKey("TP1_ORM_Domain.Entities.Orden", "CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Carrito", b =>
                {
                    b.Navigation("CarritoProductos");

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Carritos");
                });

            modelBuilder.Entity("TP1_ORM_Domain.Entities.Producto", b =>
                {
                    b.Navigation("CarritoProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
